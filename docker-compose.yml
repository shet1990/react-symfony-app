version: "3.7"

services:

    server:
        image: nginx:stable-alpine
        container_name: nginx_server
        volumes:
            - ./docker/nginx/default-back.conf:/etc/nginx/conf.d/default.conf:ro
            - ./server:${APP_PATH_BACK}
        working_dir: ${APP_PATH_BACK}
        ports:
            - "80:80"
        depends_on:
            - php
            - db
        networks:
            - devops

    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: php_server
        volumes:
            - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini:ro
            - ./server:${APP_PATH_BACK}
        working_dir: ${APP_PATH_BACK}
        environment:
            TIMEZONE: ${TIMEZONE}
            POSTGRES_HOST: postgres.docker
            POSTGRES_PORT: 5432
            POSTGRES_DB: react-symfony
            POSTGRES_USER: react-symfony
            POSTGRES_PASSWORD: Gdf1?l4D)8hv
        ports:
            - "9000:9000"
        networks:
            - devops

    composer:
        image: composer:1.10.6
        container_name: composer
        volumes_from:
            - php
        working_dir: ${APP_PATH_BACK}
        command: composer install

    db:
        build:
            context: .
            dockerfile: ./docker/pgsql/Dockerfile
        container_name: postgres_db
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /var/lib/postgresql/data/react-symfony
        volumes:
            - pgdata:/var/lib/postgresql/data/react-symfony:delegated
            - ./backups:/backups:delegated
        ports:
            - "5432:5432"
        networks:
            devops:
                aliases:
                    - postgres.docker

volumes:
    pgdata:
        driver: local

networks:
    devops: